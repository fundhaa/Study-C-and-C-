// 정리

// 1. C보다 발전된 C++ 문법 - 객체 지향과는 관련없는 문법들
//		auto, template, new, overloading, inline, reference 등

// 2. OOP 핵심 - "타입을 먼저 만들자"
//		=> 그런데, 사용하기 쉽고 안전한 타입을 만들자.
//		==> 초보자가 사용해도 문제가 되지 않는 안전하고 쉬운 타입

// 그래서 타입 만들때 사용할 문법을 배운 것. class 문법
// 1) 접근지정자 - private, public #시험문제 : 외부에서 접근하지 못하는 지정자 : private
// 2) 생성자, 소멸자 - vector 만들기 예제에서 소멸자의 필요성 언급.
// 3) 생성자에서 멤버 초기화 할 때는 "초기화 리스트"
// 4) static 멤버 데이터 - 모든 객체가 공유, 객체 생성안해도(객체 없어도) 메모리에 존재
//	  static 멤버 함수 - 객체 없이 호출 가능. => 초급 시절에는 static을 사용하는 것이 어려움.

// 5) 상수 멤버 함수 - "상수 객체를 고려한 문법"
//						상수 객체라도 할 수 있는 일이 있다. - 상수 멤버함수로 만들어라.
//						const Rect rc(1, 1, 10, 10);
//						rc.move(4, 4); // 당연히 에러나와야 한다.
//						rc.getWidth(); // 이건 구할 수 있어야한다. 왜냐면 좌표를 움직이거나, 길이를 변경하지 않으니까

// 6) this 키워드의 의미, 활용(5일차에 자세히)
//			=> 멤버함수의 호출 원리 p1.set(10, 20) ==> set(&p1, 10, 20)

// 7) 복사 생성자(5일차에 배움)